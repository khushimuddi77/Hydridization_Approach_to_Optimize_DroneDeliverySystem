{"cells":[{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"kHuRAd79x2qc"},"outputs":[{"name":"stdout","output_type":"stream","text":["Mounted at /content/drive/\n","[326.4017398204068, 1117.8524325833605, 684.4203285586452, 1334.0261171674797, 937.248469553328, 1396.6001274685573, 531.2995059027409, 2879.5729410531903, 961.745012659826, 400.8413227368309, 1379.7347060618397, 2005.7007711741617, 1136.0546410454417, 1202.017508245335, 1687.1779433532818, 919.1867066490536, 835.7849569756083, 863.0517353395958, 1033.7700233293972, 1043.494918209042, 221.54003881509755, 612.1023492235621, 1263.0097453616715, 730.1782284214314, 1035.2035763583165, 265.0937135768481, 1041.8414487722468, 1352.785723352055, 914.4849120330372, 1139.6700395891055, 1080.4011518630844, 2360.9038283200125, 1010.0333593339284, 1266.6954643110116, 342.1856647379893, 1355.189831593235, 3214.8552019741683, 3264.8772887170094, 1844.8144811809384, 1193.9105770728163, 3169.619218113029, 90.98885584995853, 1086.1426249534006, 1059.4068680687926, 815.6059581648833, 1494.2646362973735, 612.2499240067743, 595.1144325297207, 1087.2109753255768, 65.0935130053678]\n","[3 5 4 2 0 2 4 1 0 3 2 6 5 5 6 0 0 0 0 0 3 4 5 4 0 3 0 2 0 5 5 6 0 5 3 2 1\n"," 1 6 5 1 3 5 5 0 2 4 4 5 3]\n","Cluster 1:\n","       Distance   Payload\n","4    937.248470  1.790164\n","8    961.745013  4.107892\n","15   919.186707  4.376559\n","16   835.784957  4.112062\n","17   863.051735  2.079009\n","18  1033.770023  2.191698\n","19  1043.494918  0.703710\n","24  1035.203576  0.709957\n","26  1041.841449  4.582634\n","28   914.484912  0.578149\n","32  1010.033359  3.986146\n","44   815.605958  0.019909\n","\n","Cluster 2:\n","       Distance   Payload\n","7   2879.572941  4.190192\n","36  3214.855202  4.856952\n","37  3264.877289  1.173815\n","40  3169.619218  0.525607\n","\n","Cluster 3:\n","       Distance   Payload\n","3   1334.026117  4.765051\n","5   1396.600127  1.915865\n","10  1379.734706  3.410262\n","27  1352.785723  0.146847\n","35  1355.189832  3.340669\n","45  1494.264636  4.910115\n","\n","Cluster 4:\n","      Distance   Payload\n","0   326.401740  4.491287\n","9   400.841323  1.797942\n","20  221.540039  0.263676\n","25  265.093714  0.640673\n","34  342.185665  4.009100\n","41   90.988856  0.244584\n","49   65.093513  2.771162\n","\n","Cluster 5:\n","      Distance   Payload\n","2   684.420329  0.957090\n","6   531.299506  4.801491\n","21  612.102349  1.522988\n","23  730.178228  1.223056\n","46  612.249924  0.137805\n","47  595.114433  1.847165\n","\n","Cluster 6:\n","       Distance   Payload\n","1   1117.852433  0.943155\n","12  1136.054641  0.124923\n","13  1202.017508  1.205059\n","22  1263.009745  0.400565\n","29  1139.670040  2.293878\n","30  1080.401152  0.913318\n","33  1266.695464  3.701519\n","39  1193.910577  4.670138\n","42  1086.142625  0.555344\n","43  1059.406868  2.171461\n","48  1087.210975  1.555144\n","\n","Cluster 7:\n","       Distance   Payload\n","11  2005.700771  2.557623\n","14  1687.177943  1.463220\n","31  2360.903828  0.548457\n","38  1844.814481  1.919616\n","\n"]},{"data":{"image/png":"\n","text/plain":["\u003cFigure size 1200x800 with 1 Axes\u003e"]},"metadata":{},"output_type":"display_data"}],"source":["import time\n","\n","# Record the start time\n","start_time = time.time()\n","import numpy as np\n","from sklearn.cluster import KMeans\n","import pandas as pd\n","import matplotlib.pyplot as plt\n","\n","# Generate sample data\n","from google.colab import drive\n","drive.mount('/content/drive/')\n","data = pd.read_csv('/content/drive/MyDrive/data/distance/county_pairwise_distance.csv')\n","data_1 = pd.read_csv('/content/drive/MyDrive/data/distance/drone_delivery_data (3)2.csv')\n","prob=pd.read_csv('/content/drive/MyDrive/data/distance/probability (7).csv')\n","\n","payload=data_1['Payload']\n","\n","row = data.iloc[0]\n","\n","distances=[]\n","payloads=[]\n","\n","\n","n_clusters = 7\n","n_samples=50\n","for i in range(n_samples+1):\n","  distances.append(row[i])\n","\n","distances.pop(0)\n","print(distances)\n","for i in range(n_samples):\n","  payloads.append(payload[i])\n","\n","np.random.seed(0)\n","\n","\n","# Distance, Payload\n","n_features = 2\n","\n","\n","# Combining the features into a feature matrix\n","X = np.column_stack((distances, payloads))\n","\n","best_cluster_labels = None\n","best_payload_left = float('inf')\n","\n","\n","# Initialize centroids randomnly\n","initial_centroids = X[np.random.choice(X.shape[0], n_clusters, replace=False)]\n","\n","#K mean clustering\n","kmeans = KMeans(n_clusters=n_clusters, random_state=0, init=initial_centroids, n_init=1)\n","kmeans.fit(X)\n","\n","# cluster labels for each customer\n","cluster_labels = kmeans.labels_\n","\n","\n","# Define feature names\n","feature_names = ['Distance', 'Payload']\n","\n","# DataFrame to store the data points and cluster labels\n","data_df = pd.DataFrame(X, columns=feature_names)\n","data_df['Cluster'] = cluster_labels\n","\n","\n","best_cluster_labels = cluster_labels.copy()\n","\n","print(best_cluster_labels)\n","\n","for i in range(n_clusters):\n","    cluster_data = data_df[data_df['Cluster'] == i]\n","    print(f\"Cluster {i + 1}:\")\n","    print(cluster_data[[ 'Distance', 'Payload']])\n","    print()\n","\n","# Visualize the clusters with labeled data points\n","plt.figure(figsize=(12, 8))\n","for i in range(n_clusters):\n","    cluster_points = data_df[best_cluster_labels == i].drop(columns=['Cluster'])\n","    plt.scatter(cluster_points['Distance'], cluster_points['Payload'], label=f'Cluster {i + 1}', s=60)\n","\n","plt.xlabel('Distance from Depot',fontsize=12)\n","plt.ylabel('Payload',fontsize=12)\n","plt.legend(fontsize=12)\n","plt.title('Best K-means Clustering for Drone Delivery Scheduling')\n","plt.show()\n"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"VqTrBF4fjO01"},"outputs":[{"data":{"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"},"text/plain":["'\\nfor i, cluster_chromosomes in enumerate(initial_chromosomes):\\n    print(f\"Initial Chromosomes for Cluster {i + 1}:\")\\n    for chromosome in cluster_chromosomes:\\n        print(chromosome)\\n\\n    print(f\"Permutations for Cluster {i + 1}:\")\\n    for permutation in permutations[i]:\\n        print(permutation)\\n'"]},"execution_count":2,"metadata":{},"output_type":"execute_result"}],"source":["import numpy as np\n","import random\n","\n","\n","population_size=300\n","\n","# Define the number of customers in each cluster\n","cluster_sizes = [np.sum(best_cluster_labels == i) for i in range(n_clusters)]\n","\n","# Define the depot as -1\n","depot_number = -1\n","\n","# Initialize a list to store the initial chromosomes for each cluster\n","initial_chromosomes = []\n","\n","# Generate initial chromosomes for each customer within each cluster\n","for i in range(n_clusters):\n","    # Get the data points for the current cluster\n","    cluster_indices = np.where(best_cluster_labels == i)[0]\n","\n","    # Add the depot as the initial point for each cluster\n","    cluster_indices = np.insert(cluster_indices, 0, depot_number)\n","\n","    initial_chromosomes.append([list(cluster_indices)])\n","\n","# Create permutations of each chromosome for each cluster\n","permutations = []\n","\n","for i, cluster_chromosomes in enumerate(initial_chromosomes):\n","    cluster_permutations = []\n","\n","    for chromosome in cluster_chromosomes:\n","        # Generate population_size permutations for each chromosome\n","        for _ in range(population_size):\n","            # Shuffle the order of customers in the chromosome, excluding the depot (Swap Mutation)\n","            shuffled_chromosome = random.sample(chromosome[1:], len(chromosome) - 1)\n","            shuffled_chromosome = [depot_number] + shuffled_chromosome  # Add depot at the beginning\n","            cluster_permutations.append(shuffled_chromosome)\n","\n","    permutations.append(cluster_permutations)\n","\n","\n","# Print the initial chromosomes and their permutations\n","\"\"\"\n","for i, cluster_chromosomes in enumerate(initial_chromosomes):\n","    print(f\"Initial Chromosomes for Cluster {i + 1}:\")\n","    for chromosome in cluster_chromosomes:\n","        print(chromosome)\n","\n","    print(f\"Permutations for Cluster {i + 1}:\")\n","    for permutation in permutations[i]:\n","        print(permutation)\n","\"\"\"\n"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"8EcPC_af24l6"},"outputs":[],"source":["#Function to find the payload of the specific customer\n","def Cust_Payload(customer_number_to_find):\n","\n"," for cluster_number in range(n_clusters):\n","  cluster_data = data_df[data_df['Cluster'] == cluster_number]\n","  if customer_number_to_find in cluster_data.index:\n","   payload_of_customer = cluster_data.loc[customer_number_to_find, 'Payload']\n","   return payload_of_customer\n","\n","\n"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"zW-ccNvimQYV"},"outputs":[],"source":["#Function to find the total payload of a chromosme\n","def total_payload(chromosome):\n","  payload=0\n","  for i in range(len(chromosome)):\n","    if i!=0:\n","        payload+=Cust_Payload(chromosome[i])\n","  return payload\n","\n"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"mVbTRIx3x6Rv"},"outputs":[],"source":["# Function to find the cluster number to which the customer belongs to\n","def Cluster_Number(desired_chromosome):\n","\n","# Initialize variables to store the cluster number and permutation index\n"," cluster_number = None\n"," permutation_index = None\n","\n","# Iterate through all permutations to find the desired chromosome\n"," for i, cluster_permutations in enumerate(permutations):\n","    for j, permutation in enumerate(cluster_permutations):\n","        if permutation == desired_chromosome:\n","            cluster_number = i\n","            permutation_index = j\n","            break\n","    if cluster_number is not None:\n","        break\n"," cluster_number+=1\n"," return cluster_number\n","\n"]},{"cell_type":"code","execution_count":null,"metadata":{"colab":{"background_save":true},"id":"9XmMCwdNKD1U"},"outputs":[],"source":["#fitness function\n","def calculate_elod(chromosome):\n","    elod = 0\n","    success_probability_product = 1\n","    cluster_number = Cluster_Number(chromosome)\n","    total_payload_cluster = total_payload(chromosome)\n","    # Iterate through the chromosome to calculate ELOD\n","    for i in range(len(chromosome) - 1):\n","        from_customer = chromosome[i]\n","        to_customer = chromosome[i + 1]\n","        result = prob.loc[(prob['From Customer'] == from_customer) \u0026 (prob['To Customer'] == to_customer), 'Probability']\n","        probability_of_failure=result.values[0]\n","\n","        # Update ELOD for the segment\n","        elod += success_probability_product * probability_of_failure * total_payload_cluster\n","\n","        total_payload_cluster -= Cust_Payload(to_customer)\n","        success=1-probability_of_failure\n","        success_probability_product *= success\n","\n","\n","    return elod\n","\n","\n"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"K6OMbD1fV0-X"},"outputs":[],"source":["# Calculate the minimum ELOD for each cluster\n","min_elods = []\n","final_chromosomes=[]\n","chromosome=[]\n","for i, cluster_permutations in enumerate(permutations):\n","    min_elod = float(\"inf\")\n","    for permutation in cluster_permutations:\n","        elod = calculate_elod(permutation)\n","        if elod \u003c min_elod:\n","            min_elod = elod\n","            chromosome=permutation\n","    final_chromosomes.append(chromosome)\n","    min_elods.append(min_elod)\n","\n","# Print the minimum ELOD for each cluster\n","Total_ELOD=0\n","for i, min_elod in enumerate(min_elods):\n","    print(f\"Minimum ELOD for Cluster {i + 1}: {min_elod}\")\n","    Total_ELOD+=min_elod\n","print(f'\\nThe Total ELOD is {Total_ELOD}')\n","print(\"\\nPath with minimum ELOD for each cluster :\")\n","print(final_chromosomes)\n","end_time = time.time()\n","\n","# Calculate the elapsed time\n","elapsed_time = end_time - start_time\n","print(f'\\nComputational time :{elapsed_time}')"]},{"cell_type":"code","execution_count":null,"metadata":{"id":"x6ok90E82sVX"},"outputs":[],"source":[]}],"metadata":{"colab":{"name":"","provenance":[{"file_id":"10csuGDLqs0x_d2RON9iJ-BdNgUnPYNdv","timestamp":1700416181219},{"file_id":"1M_wbUT0SJZEWR-e3gxITTKLhDi7-mqRD","timestamp":1698397450430}],"version":""},"kernelspec":{"display_name":"Python 3","name":"python3"},"language_info":{"name":"python"}},"nbformat":4,"nbformat_minor":0}